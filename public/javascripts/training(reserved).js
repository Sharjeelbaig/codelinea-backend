 const data = [
    { "text": "print('Example')", "label": "code" },
    { "text": "hello", "label": "not code" },
    { "text": "for(int i = 0; i < 10; i++){\ndoSomething();\n}", "label": "code" },
    { "text": "what is your name?", "label": "not code" },
    { "text": "function getValue(value){\nreturn value;\n}", "label": "code" },
    { "text": "the weather is so hot today", "label": "not code" },
    { "text": "int x = 7;", "label": "code" },
    { "text": "I am allergic to peanuts.", "label": "not code" },
    { "text": "a = 5; b = 10; c = a + b", "label": "code" },
    { "text": "What time is it?", "label": "not code" },
    { "text": "def factorial(n): if n == 0: return 1 else: return n * factorial(n-1)", "label": "code" },
    { "text": "I like to watch movies.", "label": "not code" },
    { "text": "for i in range(10): print(i)", "label": "code" },
    { "text": "I enjoy listening to music.", "label": "not code" },
    { "text": "#include <vector> std::vector<int> v = {1, 2, 3, 4, 5};", "label": "code" },
    { "text": "What is your favorite book?", "label": "not code" },
    { "text": "x = 'apple' if a > b else 'banana'", "label": "code" },
    { "text": "I need to buy some groceries.", "label": "not code" },
    { "text": "while x < 10: x += 1", "label": "code" },
    { "text": "I like to go hiking in the mountains.", "label": "not code" },
    { "text": "x = [1, 2, 3, 4, 5]; print(sum(x))", "label": "code" },
    { "text": "What is your favorite movie?", "label": "not code" },
    { "text": "def fibonacci(n): if n == 0: return 0 elif n == 1: return 1 else: return fibonacci(n-1) + fibonacci(n-2)", "label": "code" },
    { "text": "I enjoy playing video games.", "label": "not code" },
    { "text": "try: x = 1/0 except ZeroDivisionError: print('Division by zero error!')", "label": "code" },
    { "text": "I need to do laundry this weekend.", "label": "not code" },
    { "text": "x = {1, 2, 3, 4, 5}; print(len(x))", "label": "code" },
    { "text": "What is the capital of the United States?", "label": "not code" },
    { "text": "a = 5; b = 10; if a > b: print('a is greater than b') else: print('b is greater than a')", "label": "code" },
    { "text": "I like to go swimming in the ocean.", "label": "not code" },
    {
      "text": "import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Hello World!</h1>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n",
      "label": "code"
  },
  {
      "text": "import React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n",
      "label": "code"
  },
  {
      "text": "import React from 'react';\n\nfunction Heading(props) {\n  return <h1>{props.text}</h1>;\n}\n\nfunction App() {\n  return <Heading text='Hello World!' />;\n}\n",
      "label": "code"
  },
  {
      "text": "import React from 'react';\n\nfunction App() {\n  const [name, setName] = React.useState('');\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    alert('Name submitted: ' + name);\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input type='text' value={name} onChange={handleChange} />\n        </label>\n        <button type='submit'>Submit</button>\n      </form>\n    </div>\n  );\n}\n",
      "label": "code"
  },
  {
      "text": "import React from 'react';\n\nfunction App() {\n  const [isToggleOn, setIsToggleOn] = React.useState(false);\n\n  function handleClick() {\n    setIsToggleOn(!isToggleOn);\n  }\n\n  return (\n    <button onClick={handleClick}>\n      {isToggleOn ? 'ON' : 'OFF'}\n    </button>\n  );\n}\n",
      "label": "code"
  },
  {"text": "def calculate_power(base, exponent):\n    return base ** exponent", "label":"code"},
  {"text": "from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier()", "label":"code"},
  {"text": "The sky is blue today.", "label": "not code"},
  {"text": "What time is it?", "label": "not code"},
  {"text": "I need to do laundry.", "label": "not code"},
  {"text": "The movie was really good.", "label": "not code"},
  {"text": "I love to travel.", "label": "not code"},
  {"text": "What is your favorite food?", "label": "not code"},
  {"text": "I am feeling tired.", "label": "not code"},
  {"text": "I need to call my mom.", "label": "not code"},
  {"text": "The weather is beautiful today.", "label": "not code"},
  {"text": "I like to read books.", "label": "not code"},
  {"text": "What is your favorite hobby?", "label": "not code"},
  {"text": "I am going to the store.", "label": "not code"},
  {"text": "I need to take the dog for a walk.", "label": "not code"},
  {"text": "The beach is crowded today.", "label": "not code"},
  {"text": "I am looking forward to the weekend.", "label": "not code"},
  {"text": "What is your favorite movie?", "label": "not code"},
{"text": "I am learning a new language.", "label": "not code"},
{"text": "I need to pay my bills.", "label": "not code"},
{"text": "The traffic is terrible today.", "label": "not code"},
{"text": "I enjoy spending time with my family.", "label": "not code"},
{"text": "What is your favorite book?", "label": "not code"},
{"text": "I am feeling stressed.", "label": "not code"},
{"text": "I need to go grocery shopping.", "label": "not code"},
{"text": "The park is closed today.", "label": "not code"},
{"text": "I am excited for my vacation.", "label": "not code"},
{"text": "What is your favorite color?", "label": "not code"},
{"text": "I am going to the gym.", "label": "not code"},
{"text": "I need to clean my apartment.", "label": "not code"},
{"text": "The concert was amazing.", "label": "not code"},
{"text": "I am looking for a new job.", "label": "not code"},
{"text": "What is your favorite TV show?", "label": "not code"},
{"text": "I am feeling happy today.", "label": "not code"},
{"text": "I need to fix my car.", "label": "not code"},
{"text": "The restaurant is closed today.", "label": "not code"},
{"text": "I am enjoying the beautiful weather.", "label": "not code"},
{"text": "What is your favorite sport?", "label": "not code"},
{"text": "I am going to the beach.", "label": "not code"},
{"text": "I need to get a haircut.", "label": "not code"},
{"text": "The museum is closed today.", "label": "not code"},
{"text": "I am feeling sad today.", "label": "not code"},
  {"text": "I once tried to catch a cloud with a butterfly net", "label": "not code"},
  {"text": "Do ants have belly buttons?", "label": "not code"},
  {"text": "I've never met a giraffe who could juggle oranges", "label": "not code"},
  {"text": "If cats could fly, they would rule the world", "label": "not code"},
  {"text": "I have a pet rock named Fred", "label": "not code"},
  {"text": "I once tried to teach my goldfish how to play chess", "label": "not code"},
  {"text": "Do aliens wear socks?", "label": "not code"},
  {"text": "I can speak dolphin fluently", "label": "not code"},
  {"text": "I wish I could breathe underwater", "label": "not code"},
  {"text": "I once saw a unicorn playing the guitar", "label": "not code"},
  {"text": "Do rabbits dream of electric carrots?", "label": "not code"},
  {"text": "I believe that pizza is a vegetable", "label": "not code"},
  {"text": "I wish I had a pet dragon", "label": "not code"},
  {"text": "If I could time travel, I'd go back to the dinosaur age", "label": "not code"},
  {"text": "I think that trees have their own secret language", "label": "not code"},
  {"text": "I once tried to make a sandwich out of leaves", "label": "not code"},
  {"text": "Do you think aliens have their own version of pizza?", "label": "not code"},
  {"text": "I once tried to teach my cat how to sing", "label": "not code"},
  {"text": "I wish I could turn invisible whenever I wanted", "label": "not code"},
  {"text": "I've always wanted to ride a giant snail", "label": "not code"},
  {"text": "Do you think dolphins have a sense of humor?", "label": "not code"},
  {"text": "I wish I could talk to trees", "label": "not code"},
  {"text": "I once saw a cloud that looked like a dragon", "label": "not code"},
  {"text": "Do you think aliens like to dance?", "label": "not code"},
  {"text": "I believe that unicorns are real", "label": "not code"},
  {"text": "I've always wanted to learn how to play the accordion", "label": "not code"},
  {"text": "Do you think that rocks have feelings?", "label": "not code"},
  {"text": "I wish I could fly like a bird", "label": "not code"},
  {"text": "I once tried to make a cake out of mud", "label": "not code"},
  {"text": "Do you think that spiders have dreams?", "label": "not code"},
  {"text": "I've always wanted to live in a house made of candy", "label": "not code"},
  {"text": "I wish I could breathe fire like a dragon", "label": "not code"},
  {"text": "I believe that fairies live at the bottom of my garden", "label": "not code"},
  {"text": "Do you think that aliens like to watch TV?", "label": "not code"},
  {"text": "import os\nos.chdir('/path/to/directory')", "label":"code"},
{"text": "def multiply_numbers(a, b):\n    return a * b", "label":"code"},
{"text": "from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()", "label":"code"},
{"text": "def calculate_mean(numbers):\n    return sum(numbers) / len(numbers)", "label":"code"},
{"text": "import matplotlib.pyplot as plt\nplt.plot([1, 2, 3, 4], [1, 4, 9, 16])\nplt.show()", "label":"code"},
{"text": "def count_vowels(string):\n    vowels = 'aeiou'\n    count = 0\n    for char in string:\n        if char in vowels:\n            count += 1\n    return count", "label":"code"},
{"text": "import random\nrandom_number = random.randint(1, 10)", "label":"code"},
{"text": "def calculate_median(numbers):\n    sorted_numbers = sorted(numbers)\n    length = len(sorted_numbers)\n    if length % 2 == 0:\n        return (sorted_numbers[length//2] + sorted_numbers[length//2-1]) / 2\n    else:\n        return sorted_numbers[length//2]", "label":"code"},
{"text": "from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()", "label":"code"},
{"text": "def calculate_factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * calculate_factorial(n-1)", "label":"code"},
{"text": "import datetime\ntoday = datetime.date.today()", "label":"code"},
]

module.exports = data;